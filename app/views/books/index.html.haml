.container-fluid
  .row
    = search_form_for(@q) do |f|
      = f.input :title_cont, label: 'Title', required: false
      = f.input :meta_rating_eq, collection: [['★', 1], ['★★', 2], ['★★★', 3], ['★★★★', 4], ['★★★★★', 5]], label: 'Rating', required: false
      = f.input :pages_lteq, collection: [['Less than 150 pages', 150], ['Less than 200 pages', 200], ['Less than 250 pages', 250], ['Less than 300 pages', 300]], label: 'Length', required: false
      = f.input :library_books_library_id_eq, collection: Library.all.order(:name), value_method: :id,  label: 'Library', required: false
      = f.input :library_books_available_eq, collection: [['YES', true], ['NO', false]], label: 'Available', required: false
      = f.input :library_count_eq, collection: [['YES', 1], ['NO', -1]], label: 'Solo', include_blank: true, required: false, selected: params[:q][:library_count_eq]
      = f.input :meta_status_eq, collection: [['New', 'new'], ['Borrowed', 'borrowed']], label: 'Status', include_blank: true, required: false
      = f.submit 'Search'
      = link_to 'Reset', books_url
    %hr
  .row
    .col-xs-12
      %table.table.table-striped
        %tr
          %th{ width: 140 }= sort_link(@q, :call_no)
          %th{ width: 620 }= sort_link(@q, :title)
          %th Rating
          %th{ width: 80 }= sort_link(@q, :pages)
          %th{ width: 80 }= sort_link(@q, :height)
          %th{ width: 80 } Solo
          %th Available
          %th{ width: 120 } Update Status
          %th Last Updated
          %th{ width: 100 } Actions
        - @books.each do |b|
          %tr{ id: "book-#{b.id}" }
            = render partial: 'row', locals: { b: b }
      = page_entries_info @books
      .pagination.pull-right
        = will_paginate @books
