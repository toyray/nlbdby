.container-fluid
  = search_form_for(@q) do |f|
    = f.input :title_cont, label: 'Title', required: false
    = f.input :meta_rating_eq, collection: [['Unrated', 0], ['★', 1], ['★★', 2], ['★★★', 3], ['★★★★', 4], ['★★★★★', 5]], label: 'Rating', required: false
    = f.input :pages_lteq, collection: [['< 110 pages', 110], ['< 220 pages', 220], ['< 330 pages', 330], ['< 440 pages', 440], ['< 550 pages', 550]], label: 'Length', required: false
    = f.input :library_books_library_id_eq, collection: Library.all.order(:name), value_method: :id,  label: 'Library', required: false
    = f.input :available, collection: [['YES', 1], ['NO', -1]], label: 'Available', include_blank: true, required: false, selected: params[:q][:available]
    = f.input :regional_only, collection: [['YES', 1], ['NO', -1]], label: 'Regional Only', include_blank: true, required: false, selected: params[:q][:regional_only]
    = f.input :library_count, collection: [['Solo (0-1)', -1], ['Rare (2-5)', -2],['Common (6+)', -3] ], label: 'Quantity', include_blank: true, required: false, selected: params[:q][:library_count]
    = f.input :meta_status_eq, collection: [['New', 'new'], ['Browsed', 'browsed'], ['Borrowed', 'borrowed'], ['Archived', 'archived']], label: 'Status', include_blank: true, required: false
    = f.input :meta_starred_eq, collection: [['YES', true], ['NO', false]], label: 'Starred', include_blank: true, required: false
    = f.submit 'Search'
    = link_to 'Reset', books_url
  %hr
  .row
    .col-xs-12
      %table.table.table-striped
        %tr
          %th{ width: 35 }= sort_link(@q, :id, 'Added', default_order: :desc)
          %th{ width: 160 }= sort_link(@q, :call_no)
          %th= sort_link(@q, :title)
          %th{ width: 100 }= sort_link(@q, :meta_rating)
          %th{ width: 80 }= sort_link(@q, :pages)
          %th{ width: 120 } Status
          %th{ width: 170 } Updated
          %th{ width: 100 } Actions
        - @books.each do |b|
          %tr{ id: "book-#{b.id}" }
            = render partial: 'row', locals: { b: b.decorate }
      = page_entries_info @books
      .pagination.pull-right
        = will_paginate @books
